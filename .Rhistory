shiny::runApp('app')
load("~/Dropbox/Tian_Teaching/G5243-ADS/Projects/Fall2016/Project2_OpenDataNYC/output/mh2009use.RData")
View(mh2009.use)
library(dtplyr)
library(lubridate)
if (!require("DT")) install.packages('DT')
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if(!require("lubridate")) install.packages('lubridate')
ibrary(dtplyr)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
{ devtools::install_github('arilamstein/choroplethrZip@v1.5.0')}
if (!require("choroplethrZip"))
{ devtools::install_github('arilamstein/choroplethrZip@v1.5.0')}
url <- function(address, return.call = "json", sensor = "false") {
root <- "http://maps.google.com/maps/api/geocode/"
u <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(u))
}
url <- function(address, return.call = "json", sensor = "false") {
root <- "http://maps.google.com/maps/api/geocode/"
u <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(u))
}
geoCode <- function(address,verbose=FALSE) {
if(verbose) cat(address,"\n")
u <- url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
location_type  <- x$results[[1]]$geometry$location_type
formatted_address  <- x$results[[1]]$formatted_address
return(c(lat, lng, location_type, formatted_address))
Sys.sleep(0.5)
} else {
return(c(NA,NA,NA, NA))
}
}
address - geoCode("The White House, Washington, DC")
address = geoCode("The White House, Washington, DC")
geoCode <- function(address,verbose=FALSE) {
if(verbose) cat(address,"\n")
u <- url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
location_type  <- x$results[[1]]$geometry$location_type
formatted_address  <- x$results[[1]]$formatted_address
return(c(lat, lng, location_type, formatted_address))
Sys.sleep(0.5)
} else {
return(c(NA,NA,NA, NA))
}
}
address = geoCode("The White House, Washington, DC")
setwd(D:/Columbia University/Spring2017-Applied Data Science/Project_2_Bz2290/data/CollegeScorecard_Raw_Data/CollegeScorecard_Raw_Data)
setwd("D:/Columbia University/Spring2017-Applied Data Science/Project_2_Bz2290/data/CollegeScorecard_Raw_Data/CollegeScorecard_Raw_Data")
data.proj.2 = read.csv("MERGED2014_15_PP.csv",header = TRUE)
data.proj.2 = subset(data.proj.2$STABBR == "NY")
data.proj.2 = subset(data.proj.2, data.proj.2$STABBR == "NY")
view(data.proj.2)
View(data.proj.2)
View(data.proj.2)
?write.csv
write.csv(data.proj.2, file = "data.2014_15.csv")
data.proj.2 = read.csv("MERGED2013_14_PP.csv",header = TRUE)
data.proj.2 = subset(data.proj.2, data.proj.2$STABBR == "NY")
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if(!require("lubridate")) install.packages('lubridate')
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
install.packages("shiny")
library(shiny)
runExample("01_hello")
setwd("D:/Columbia University/Spring2017-Applied Data Science/Project_2_Bz2290/data/CollegeScorecard_Raw_Data/CollegeScorecard_Raw_Data")
file = read.csv("MERGED1996_97_PP.csv",header = TRUE)
file = subset(file,file$STABBR == "NY")
View(file)
View(file)
colnames(file)[1] = "UNITID"
View(file)
View(file)
write.csv("College1996_97.csv",file)
?write.csv
write.csv(file,file="College1996_97.csv")
file = read.csv("MERGED1997_98_PP.csv",header = TRUE)
file = subset(file,file$STABBR == "NY")
colnames(file)[1] = "UNITID"
write.csv(file,file="College1997_98.csv")
file = read.csv("MERGED1998_99_PP.csv",header = TRUE)
file = subset(file,file$STABBR == "NY")
colnames(file)[1] = "UNITID"
write.csv(file,file="College1998_99.csv")
file = read.csv("MERGED1999_00_PP.csv",header = TRUE)
file = subset(file,file$STABBR == "NY")
colnames(file)[1] = "UNITID"
write.csv(file,file="College1999_00.csv")
?substring
paste("MERGE",as.character(i),"_",substring(as.character(i+1),start = 3, stop = 4),"_","PP")
paste("MERGE",as.character(i),"_",substring(as.character(i+1),start = 3, stop = 4),"_","PP")
i  = 2000
paste("MERGE",as.character(i),"_",substring(as.character(i+1),start = 3, stop = 4),"_","PP")
paste("MERGE",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),"_","PP")
paste("MERGE",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),"_","PP",sep="")
paste("MERGE",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),"_","PP",".csv",sep="")
paste("MERGED",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),"_","PP",".csv",sep="")
name = paste("MERGED",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),"_","PP",".csv",sep="")
file = read.csv(name,header = TRUE)
View(file)
View(file)
output = paste("College",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),".csv",sep="")
output
for (i in 2000 : 2014)
{
name = paste("MERGED",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),"_","PP",".csv",sep="")
file = read.csv(name,header = TRUE)
file = subset(file,file$STABBR == "NY")
colnames(file)[1] = "UNITID"
write.csv(file,file=paste("College",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),".csv",sep=""))
}
i = 1996
name = paste("MERGED",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),"_","PP",".csv",sep="")
file = read.csv(name,header = TRUE)
file = subset(file,file$STABBR == "NY")
colnames(file)[1] = "UNITID"
write.csv(file,file=paste("College",as.character(i),"_",substr(as.character(i+1),start = 3, stop = 4),".csv",sep=""))
